[tox]
; default testenv(s) to run on raw `tox` calls.
envlist = py312-test

[testenv]
extras =
    dev
    complete

# Run test suite ==============================================================
[testenv:py{310,311,312}-test]
description =
    Run Pyxu test suite.
    Executing this testenv without any extra parameters consists in running a
    subset of the test suite which runs in ~5[min].  Pass the `all` parameter
    to execute the complete test suite. (Takes ~1[day].)
usedevelop = true
allowlist_externals =
    /bin/sh
commands =
    /bin/sh -c '                                                                \
        if [ -z "{posargs}" ]; then                                             \
            python3 -m pytest                                                   \
                    --verbosity=1                                               \
                    -r a                                                        \
                    -k="not (pinv or dagger or asarray)"                        \
                    {toxinidir}/src/pyxu_tests/math/                            \
                    {toxinidir}/src/pyxu_tests/operator/interop/test_sciop.py   \
                    {toxinidir}/src/pyxu_tests/operator/interop/test_source.py  \
                    {toxinidir}/src/pyxu_tests/operator/examples/               \
                    {toxinidir}/src/pyxu_tests/opt/solver/test_cg.py            \
                    {toxinidir}/src/pyxu_tests/util/;                           \
        elif [ "{posargs}" = "all" ]; then                                      \
            python3 -m pytest                                                   \
                    --verbosity=1                                               \
                    -r a                                                        \
                    {toxinidir}/src/pyxu_tests/;                                \
        else                                                                    \
            exit 1;                                                             \
        fi                                                                      \
    '

# Pre-commit hooks ============================================================
[testenv:pre-commit]
description =
    Run all pre-commit hooks.
    This is a helper function to ease friction during git commits.
skip_install = true
allowlist_externals =
    pre-commit
commands =
    pre-commit run --all-files

# Generate documentation ======================================================
[testenv:doc]
description =
    Build Pyxu HTML documentation.
    Executing this testenv without any extra parameters performs an incremental
    build. Pass the `clean` parameter to re-build the entire HTML docs from
    scratch.
skip_install = true
allowlist_externals =
    /bin/sh
commands =
    /bin/sh -c '                                                           \
        if [ -z "{posargs}" ]; then                                        \
            sphinx-build -b html                                           \
                         -j auto                                           \
                         -w {toxinidir}/build/html/WARNINGS.log            \
                         {toxinidir}/doc/                                  \
                         {toxinidir}/build/html/;                          \
        elif [ "{posargs}" = "clean" ]; then                               \
            rm -rf {toxinidir}/build/html/;                                \
            sphinx-build -b html                                           \
                         -a                                                \
                         -E                                                \
                         -j auto                                           \
                         -w {toxinidir}/build/html/WARNINGS.log            \
                         {toxinidir}/doc/                                  \
                         {toxinidir}/build/html/;                          \
        else                                                               \
            exit 1;                                                        \
        fi                                                                 \
    '

# Build PyPI wheels ===========================================================
[testenv:dist]
description =
    Build universal wheels for PyPI.
    Packages are placed under ./dist/.
skip_install = true
allowlist_externals =
    hatch
commands =
    hatch build -t wheel

# Flake8 Configuration ========================================================
[flake8]
max-complexity = 10
exclude =
	# __init__.py often contain weird code to import top-level items.
	__init__.py
extend-ignore =
	# We follow Black's guidelines here.
	# E501: line too long
	# E203: whitespace before ':'
	# E302: expected 2 blank lines, found 1
	E501
	E203
	E302

	# Do not use lambda expressions. (OK when used sparringly.)
	E731

	# Too many leading '#' for block comment.
	# We use more '#' terms at times to improve visual delimiters of long block comments.
	E266

	# Implementation is too complex.
	# (Sometimes necessary in scientific code.)
	C901
